velero:

  namespace:
    labels: {}
 
  image:
    repository: velero/velero
    tag: v1.16.0
    pullPolicy: IfNotPresent

  nameOverride: ""
  fullnameOverride: ""

  resources:
    requests:
      cpu: 500m
      memory: 128Mi
    limits:
      cpu: 1000m
      memory: 512Mi

  upgradeJobResources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 256Mi
  upgradeCRDsJob:
    automountServiceAccountToken: true
    
  dnsPolicy: ClusterFirst

  initContainers:
    - name: velero-plugin-for-aws
      image: velero/velero-plugin-for-aws:v1.7.0
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins

  terminationGracePeriodSeconds: 3600

  livenessProbe:
    httpGet:
      path: /metrics
      port: http-monitoring
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  readinessProbe:
    httpGet:
      path: /metrics
      port: http-monitoring
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  metrics:
    enabled: true
    scrapeInterval: 30s
    scrapeTimeout: 10s

    service:
      annotations: {}
      labels: {}

    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8085"
      prometheus.io/path: "/metrics"

    serviceMonitor:
      autodetect: true
      enabled: false
      annotations: {}
      additionalLabels: {}

    nodeAgentPodMonitor:
      autodetect: true
      enabled: false
      annotations: {}
      additionalLabels: {}

    prometheusRule:
      autodetect: true
      enabled: false
      additionalLabels: {}
      spec: []

  kubectl:
    image:
      repository: docker.io/bitnami/kubectl

  upgradeCRDs: true
  cleanUpCRDs: false

  configuration:
    backupStorageLocation:
    - name: default
      provider: aws
      bucket: homelab-service
      default: true
      accessMode: ReadWrite
      credential:
        name: backblaze-bucket-homelab-service
        key: cloud
      config:
       region: us-east-005
       s3Url: https://s3.us-east-005.backblazeb2.com
      
    volumeSnapshotLocation:
    - name: homelab-snapshots
      # using backblaze b2 which is s3 compatible and works with the aws provider plugin
      provider: aws
      credential:
        name: backblaze-bucket-homelab-service
        key: cloud
      config: 
       region: us-east-005
       s3Url: https://s3.us-east-005.backblazeb2.com

    repositoryMaintenanceJob:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1024Mi
      latestJobsCount: 3
    defaultVolumesToFsBackup: true

    # How often repository maintain is run for repositories by default.
    defaultRepoMaintainFrequency: 1h

  rbac:
    # Whether to create the Velero role and role binding to give all permissions to the namespace to Velero.
    create: true
    # Whether to create the cluster role binding to give administrator permissions to Velero
    clusterAdministrator: true
    # Name of the ClusterRole.
    clusterAdministratorName: cluster-admin

  # Information about the Kubernetes service account Velero uses.
  serviceAccount:
    server:
      create: true
      name:
      annotations:
      labels:
      imagePullSecrets: []
      # - registrySecretName
      # Configure if API credential for Service Account is automounted.
      automountServiceAccountToken: true

  credentials:
    existingSecret: backblaze-bucket-homelab-service
   
  backupsEnabled: true
  snapshotsEnabled: true

  # Whether to deploy the node-agent daemonset.
  deployNodeAgent: true

  nodeAgent:
    podVolumePath: /var/lib/kubelet/pods
    pluginVolumePath: /var/lib/kubelet/plugins
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1024Mi

    useScratchEmptyDir: true
    dnsPolicy: ClusterFirst
    

  schedules:
    daily-limited:
      disabled: false
      schedule: "CRON_TZ=America/New_York 0 3 * * *"
      useOwnerReferencesInBackup: false
      paused: false
      skipImmediately: false
      template:
        ttl: "240h"
        storageLocation: default
        includedNamespaces:
        - keycloak
        - openproject

